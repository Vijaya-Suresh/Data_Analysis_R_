# -*- coding: utf-8 -*-
"""Topic_Modelling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aMZnXrvRoPBpsMGDx3_kMgwZc1-sp5Dn
"""

import requests
from bs4 import BeautifulSoup as bs

url = ['https://www.dailypioneer.com/2022/pioneer-exclusive/maha-tops-suicide-numbers---all-india-rate-rises-by-6-2-.html']

       
headers={'user-agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36'}
data=[]

for url in url:
  page=requests.get(url, headers=headers)

  soup=bs(page.content,'html.parser')

  Contents=soup.findAll("p")

Scrapped_data=[]
for content in Contents:
  text=content.get_text()
  Scrapped_data.append(text)

data=' '.join([str(elem) for elem in Scrapped_data])
data

# Import necessary libraries
!pip install -q pyLDAvis
from nltk.stem import WordNetLemmatizer
from nltk.corpus import stopwords
import nltk
import gensim
from gensim import corpora
import pyLDAvis
import pyLDAvis.gensim
import pyLDAvis.gensim_models

nltk.download('punkt')
nltk.download('stopwords')
nltk.download('wordnet')
nltk.download('omw-1.4')

# Define a function for topic modeling
def topic_modeling(text, num_topics=5, num_words=10):
# Tokenize the text
  text_tokens = gensim.utils.simple_preprocess(text, deacc=True, min_len=3)
  print(text_tokens)
    
# Remove stopwords
  stop_words = set(stopwords.words('english'))
  filtered_tokens = [token for token in text_tokens if token not in stop_words]

# Lemmatize words
  lemmatizer = WordNetLemmatizer()
  lemmatized_tokens = [lemmatizer.lemmatize(token) for token in filtered_tokens]

# Create a dictionary from the tokenized text
  dictionary = corpora.Dictionary([lemmatized_tokens])
    
# Create a bag of words from the dictionary
  bow_corpus = [dictionary.doc2bow(lemmatized_tokens)]

# Train the LDA model
  lda_model = gensim.models.LdaModel(bow_corpus, num_topics=num_topics, id2word=dictionary, passes=10)
    
# Print the top words for each topic
  for idx, topic in lda_model.print_topics(num_topics=num_topics, num_words=num_words):
        print("Topic: {} \nWords: {}".format(idx, topic))
  
# Visualize the topics
  pyLDAvis.enable_notebook()
  vis = pyLDAvis.gensim_models.prepare(lda_model, bow_corpus, dictionary, R=30)
  return vis

topic_modeling(data)